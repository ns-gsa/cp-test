name: Cherry-Pick Commits to Master (does not push anything to master)

on:
  pull_request:
    branches:
      - production
    types: [closed]

jobs:
  cherry-pick:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.head.ref != 'master' &&
      github.event.pull_request.base.ref == 'production'
    steps:
      - name: Checkout master code
        uses: actions/checkout@v2
        with:
          ref: 'master'

      - name: Fetch latest production changes
        run: git fetch origin production:production

      - name: Create cherry-pick branch
        run: |
          git checkout -b cherry-pick-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.CP_TEST_PAT }}

      - name: Push cherry-pick branch
        id: create-branch
        run: |
          git push -u origin cherry-pick-${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.CP_TEST_PAT }}

      - name: Checkout master branch
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Checkout cherry-pick branch
        uses: actions/checkout@v2
        with:
          ref: cherry-pick-${{ github.run_id }}

      - name: Cherry-pick and push production commit
        id: cherry-pick
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "${GITHUB_ACTOR}"
          if git cherry-pick ${{ github.event.pull_request.merge_commit_sha }}; then
            if git push -u origin cherry-pick-${{ github.run_id }}; then
              echo "::set-output name=result::push-success"
            else
              echo "::set-output name=result::push-failure"
            fi
          else
            echo "::set-output name=result::cherry-pick-failure"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.CP_TEST_PAT }}
        continue-on-error: true

      - name: Generate PR Link
        id: generate_pr_link
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          SHA=${{ github.event.pull_request.merge_commit_sha }}
          REPO_URL="https://github.com/${{ github.repository }}"
          BASE="master"
          HEAD="cherry-pick-${{ github.run_id }}" # Dynamically set based on the GitHub Actions run ID
      
          # URL encode the title and body
          TITLE=$(echo -n "cherry pick $PR_NUMBER to master" | jq -sRr @uri)
          BODY=$(echo -n "• Automatically cherry-picked SHA $SHA\n• Original Production branch PR: #$PR_NUMBER\n• [Link to the github workflow]($REPO_URL/actions/runs/${{ github.run_id }})" | jq -sRr @uri)
          
          # Construct the PR link
          PR_LINK="$REPO_URL/compare/$BASE...$HEAD?expand=1&title=$TITLE&body=$BODY"
          
          echo "::set-output name=pr_link::$PR_LINK"

